{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["const { matchers } = require('jest-json-schema');\n\nexpect.extend(matchers);\n\nconst jsonFileNotEmptyTest = (file) => {\n  describe(`tests for ${file}`, () => {\n    it(`${file} data files returns array`, () => {\n      expect(file).not.toBe('');\n    });\n  });\n};\n\n// @TODO rename it later\n// uncomment when we'll figure out how to get data from sd repository\nconst jsonSchemaTest = (file, example, schema) => {\n  describe(`test ${file} json schema`, () => {\n    it(`validates ${file} json-schema`, () => {\n      expect(example).toMatchSchema(schema);\n    });\n  });\n};\n\n// try {\n//   describe('tests for attribute schema', () => {\n//     it('validates allergy json', () => {\n//       expect(example).toMatchSchema(schema)\n//     })\n//   })\n// } catch (e) {\n//   console.log(`${e.name}: ${e.message}`)\n// }\n\nmodule.exports = {\n  jsonFileNotEmptyTest,\n  jsonSchemaTest,\n};\n"],"names":["matchers","require$$0","expect","extend","jsonFileNotEmptyTest","file","describe","it","not","toBe","jsonSchemaTest","example","schema","toMatchSchema"],"mappings":";;IAAQA,WAAaC,eAAbD;AAERE,MAAM,CAACC,MAAP,CAAcH,QAAd;;AAEA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAU;EACrCC,QAAQ,qBAAcD,IAAd,GAAsB,YAAM;IAClCE,EAAE,WAAIF,IAAJ,gCAAqC,YAAM;MAC3CH,MAAM,CAACG,IAAD,CAAN,CAAaG,GAAb,CAAiBC,IAAjB,CAAsB,EAAtB;KADA,CAAF;GADM,CAAR;CADF;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACL,IAAD,EAAOM,OAAP,EAAgBC,MAAhB,EAA2B;EAChDN,QAAQ,gBAASD,IAAT,mBAA6B,YAAM;IACzCE,EAAE,qBAAcF,IAAd,mBAAkC,YAAM;MACxCH,MAAM,CAACS,OAAD,CAAN,CAAgBE,aAAhB,CAA8BD,MAA9B;KADA,CAAF;GADM,CAAR;CADF;;AAkBA,OAAc,GAAG;EACfR,oBAAoB,EAApBA,oBADe;EAEfM,cAAc,EAAdA;CAFF;;;;;;;"}